{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { getAllDirectIndirectChildrenIds, areAllDirectChildrenChecked, getAllParents } from './utils/itemUtils';\nimport { getDirectParentId, getItemById } from './utils/itemIdUtils';\nimport { isArray, getNestedValue } from './utils/misc';\nimport { CHILDREN_FIELD } from './utils/consts';\n/**\n * A helper function which updates the check descriptor.\n *\n * @param event - The event that triggered the change.\n * @param check - The check descriptor that will be updated.\n * @param data - The TreeView items.\n * @param settings - The additional settings that configure the update of the check descriptor.\n * @param childrenField - The field that points to the dataItem sub items. Defaults to `items`.\n * The default behavior allows the selection of multiple items.\n * @returns - The updated copy of the input check descriptor.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    state = { check: [], items: tree };\n *    render() {\n *        return (\n *            <div>\n *                <TreeView\n *                    checkboxes={true} onCheckChange={this.onCheckChange}\n *                    data={processTreeViewItems(this.state.items, { check: this.state.check })}\n *                />\n *                <div style={{ marginTop: 5 }}>\n *                    <i>Press SPACE to check/uncheck the active item</i>\n *                    <div className=\"example-config\">\n *                        Checked Indices: {this.state.check.join(\",\")}\n *                    </div>\n *                </div>\n *            </div>\n *        );\n *    }\n *    onCheckChange = (event) => {\n *        this.setState({ check: handleTreeViewCheckChange(event, this.state.check, this.state.items) });\n *    }\n * }\n *\n * const tree = [ {\n *    text: 'Furniture', expanded: true, items: [\n *        { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' } ]\n * }, {\n *    text: 'Decor', expanded: true, items: [\n *        { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' } ]\n * } ];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport function handleTreeViewCheckChange(event, check, data, settings, childrenField) {\n  if (settings === void 0) {\n    settings = {};\n  }\n  if (!data || !data.length) {\n    return [];\n  }\n  var _a = parseOperation(check),\n    ids = _a.ids,\n    idField = _a.idField;\n  var itemId = idField ? getNestedValue(idField, event.item) : event.itemHierarchicalIndex;\n  var idIndex = ids.indexOf(itemId);\n  var itemJustChecked = idIndex === -1;\n  var subItemsField = childrenField || CHILDREN_FIELD;\n  var newIds;\n  if (settings.singleMode) {\n    newIds = itemJustChecked ? [itemId] : [];\n  } else {\n    newIds = ids.slice();\n    itemJustChecked ? newIds.push(itemId) : newIds.splice(idIndex, 1);\n    if (settings.checkChildren) {\n      checkChildren(event.item, event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds);\n    }\n    if (settings.checkParents) {\n      checkParents(event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds, data);\n    }\n  }\n  return isArray(check) ? newIds : Object.assign({}, check, {\n    ids: newIds\n  });\n}\nfunction parseOperation(operation) {\n  var ids;\n  var idField = undefined;\n  if (isArray(operation)) {\n    ids = operation;\n  } else {\n    ids = operation.ids || [];\n    idField = operation.idField;\n  }\n  return {\n    ids: ids,\n    idField: idField\n  };\n}\nfunction checkChildren(item, itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids) {\n  getAllDirectIndirectChildrenIds(item, itemHierarchicalIndex, childrenField, idField).forEach(function (itemId) {\n    if (itemJustChecked && ids.indexOf(itemId) === -1) {\n      ids.push(itemId);\n    } else if (!itemJustChecked && ids.indexOf(itemId) > -1) {\n      ids.splice(ids.indexOf(itemId), 1);\n    }\n  });\n}\nfunction checkParents(itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids, data) {\n  var it = makeParentsIterator();\n  var result = it.next();\n  itemJustChecked ? check() : uncheck();\n  function check() {\n    // Check all parents which have all their children checked.\n    while (!result.done) {\n      var _a = result.value,\n        id = _a.id,\n        item = _a.item;\n      // The first check is needed. However, it is not sure whether to stop the entire loop.\n      if (ids.indexOf(id) === -1 && areAllDirectChildrenChecked(item, id, idField, childrenField, ids)) {\n        ids.push(id);\n        result = it.next();\n      } else {\n        break;\n      }\n    }\n  }\n  function uncheck() {\n    // Uncheck parents until an already unchecked parent is reached.\n    while (!result.done) {\n      var id = result.value.id;\n      var idIndex = ids.indexOf(id);\n      if (idIndex > -1) {\n        ids.splice(idIndex, 1);\n        result = it.next();\n      } else {\n        break;\n      }\n    }\n  }\n  // When called for unchecking, the parent items are not needed.\n  // That is why, for optimization, they are not returned.\n  function makeParentsIterator() {\n    var parents, i, parentId;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!idField) return [3 /*break*/, 5];\n          parents = getAllParents(itemHierarchicalIndex, childrenField, data);\n          i = parents.length - 1;\n          _a.label = 1;\n        case 1:\n          if (!(i > -1)) return [3 /*break*/, 4];\n          return [4 /*yield*/, {\n            id: getNestedValue(idField, parents[i]),\n            item: itemJustChecked ? parents[i] : undefined\n          }];\n        case 2:\n          _a.sent();\n          _a.label = 3;\n        case 3:\n          i--;\n          return [3 /*break*/, 1];\n        case 4:\n          return [3 /*break*/, 8];\n        case 5:\n          parentId = getDirectParentId(itemHierarchicalIndex);\n          _a.label = 6;\n        case 6:\n          if (!parentId) return [3 /*break*/, 8];\n          return [4 /*yield*/, {\n            id: parentId,\n            item: itemJustChecked ? getItemById(parentId, data, childrenField) : undefined\n          }];\n        case 7:\n          _a.sent();\n          parentId = getDirectParentId(parentId);\n          return [3 /*break*/, 6];\n        case 8:\n          return [2 /*return*/];\n      }\n    });\n  }\n}","map":{"version":3,"names":["__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","done","value","pop","length","push","e","getAllDirectIndirectChildrenIds","areAllDirectChildrenChecked","getAllParents","getDirectParentId","getItemById","isArray","getNestedValue","CHILDREN_FIELD","handleTreeViewCheckChange","event","check","data","settings","childrenField","_a","parseOperation","ids","idField","itemId","item","itemHierarchicalIndex","idIndex","indexOf","itemJustChecked","subItemsField","newIds","singleMode","slice","splice","checkChildren","checkParents","Object","assign","operation","undefined","forEach","it","makeParentsIterator","result","uncheck","id","parents","i","parentId"],"sources":["/Users/stanimiryakimov/Development/Kendo-Examples/kendo-drawer/node_modules/@progress/kendo-react-treeview/dist/es/handleTreeViewCheckChange.js"],"sourcesContent":["var __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getAllDirectIndirectChildrenIds, areAllDirectChildrenChecked, getAllParents } from './utils/itemUtils';\nimport { getDirectParentId, getItemById } from './utils/itemIdUtils';\nimport { isArray, getNestedValue } from './utils/misc';\nimport { CHILDREN_FIELD } from './utils/consts';\n/**\n * A helper function which updates the check descriptor.\n *\n * @param event - The event that triggered the change.\n * @param check - The check descriptor that will be updated.\n * @param data - The TreeView items.\n * @param settings - The additional settings that configure the update of the check descriptor.\n * @param childrenField - The field that points to the dataItem sub items. Defaults to `items`.\n * The default behavior allows the selection of multiple items.\n * @returns - The updated copy of the input check descriptor.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    state = { check: [], items: tree };\n *    render() {\n *        return (\n *            <div>\n *                <TreeView\n *                    checkboxes={true} onCheckChange={this.onCheckChange}\n *                    data={processTreeViewItems(this.state.items, { check: this.state.check })}\n *                />\n *                <div style={{ marginTop: 5 }}>\n *                    <i>Press SPACE to check/uncheck the active item</i>\n *                    <div className=\"example-config\">\n *                        Checked Indices: {this.state.check.join(\",\")}\n *                    </div>\n *                </div>\n *            </div>\n *        );\n *    }\n *    onCheckChange = (event) => {\n *        this.setState({ check: handleTreeViewCheckChange(event, this.state.check, this.state.items) });\n *    }\n * }\n *\n * const tree = [ {\n *    text: 'Furniture', expanded: true, items: [\n *        { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' } ]\n * }, {\n *    text: 'Decor', expanded: true, items: [\n *        { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' } ]\n * } ];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport function handleTreeViewCheckChange(event, check, data, settings, childrenField) {\n    if (settings === void 0) { settings = {}; }\n    if (!data || !data.length) {\n        return [];\n    }\n    var _a = parseOperation(check), ids = _a.ids, idField = _a.idField;\n    var itemId = idField ? getNestedValue(idField, event.item) : event.itemHierarchicalIndex;\n    var idIndex = ids.indexOf(itemId);\n    var itemJustChecked = idIndex === -1;\n    var subItemsField = childrenField || CHILDREN_FIELD;\n    var newIds;\n    if (settings.singleMode) {\n        newIds = itemJustChecked ? [itemId] : [];\n    }\n    else {\n        newIds = ids.slice();\n        itemJustChecked ? newIds.push(itemId) : newIds.splice(idIndex, 1);\n        if (settings.checkChildren) {\n            checkChildren(event.item, event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds);\n        }\n        if (settings.checkParents) {\n            checkParents(event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds, data);\n        }\n    }\n    return isArray(check) ? newIds : Object.assign({}, check, { ids: newIds });\n}\nfunction parseOperation(operation) {\n    var ids;\n    var idField = undefined;\n    if (isArray(operation)) {\n        ids = operation;\n    }\n    else {\n        ids = operation.ids || [];\n        idField = operation.idField;\n    }\n    return { ids: ids, idField: idField };\n}\nfunction checkChildren(item, itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids) {\n    getAllDirectIndirectChildrenIds(item, itemHierarchicalIndex, childrenField, idField).forEach(function (itemId) {\n        if (itemJustChecked && ids.indexOf(itemId) === -1) {\n            ids.push(itemId);\n        }\n        else if (!itemJustChecked && ids.indexOf(itemId) > -1) {\n            ids.splice(ids.indexOf(itemId), 1);\n        }\n    });\n}\nfunction checkParents(itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids, data) {\n    var it = makeParentsIterator();\n    var result = it.next();\n    itemJustChecked ? check() : uncheck();\n    function check() {\n        // Check all parents which have all their children checked.\n        while (!result.done) {\n            var _a = result.value, id = _a.id, item = _a.item;\n            // The first check is needed. However, it is not sure whether to stop the entire loop.\n            if (ids.indexOf(id) === -1 &&\n                areAllDirectChildrenChecked(item, id, idField, childrenField, ids)) {\n                ids.push(id);\n                result = it.next();\n            }\n            else {\n                break;\n            }\n        }\n    }\n    function uncheck() {\n        // Uncheck parents until an already unchecked parent is reached.\n        while (!result.done) {\n            var id = result.value.id;\n            var idIndex = ids.indexOf(id);\n            if (idIndex > -1) {\n                ids.splice(idIndex, 1);\n                result = it.next();\n            }\n            else {\n                break;\n            }\n        }\n    }\n    // When called for unchecking, the parent items are not needed.\n    // That is why, for optimization, they are not returned.\n    function makeParentsIterator() {\n        var parents, i, parentId;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!idField) return [3 /*break*/, 5];\n                    parents = getAllParents(itemHierarchicalIndex, childrenField, data);\n                    i = parents.length - 1;\n                    _a.label = 1;\n                case 1:\n                    if (!(i > -1)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, { id: getNestedValue(idField, parents[i]), item: itemJustChecked ? parents[i] : undefined }];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    i--;\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 8];\n                case 5:\n                    parentId = getDirectParentId(itemHierarchicalIndex);\n                    _a.label = 6;\n                case 6:\n                    if (!parentId) return [3 /*break*/, 8];\n                    return [4 /*yield*/, { id: parentId, item: itemJustChecked ? getItemById(parentId, data, childrenField) : undefined }];\n                case 7:\n                    _a.sent();\n                    parentId = getDirectParentId(parentId);\n                    return [3 /*break*/, 6];\n                case 8: return [2 /*return*/];\n            }\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}