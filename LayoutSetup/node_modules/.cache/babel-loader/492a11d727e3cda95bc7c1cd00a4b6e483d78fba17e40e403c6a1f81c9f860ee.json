{"ast":null,"code":"var _jsxFileName = \"/Users/stanimiryakimov/Development/Kendo-Examples/LayoutSetup/src/DrawerRouterContainer.jsx\";\nimport React from 'react';\nimport { Drawer, DrawerContent } from '@progress/kendo-react-layout';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport Header from './Header';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  name: 'My Campaigns',\n  icon: 'k-i-calendar',\n  selected: true,\n  route: '/'\n}, {\n  name: 'Create Campaigns',\n  icon: 'k-i-grid',\n  route: '/create-campaign'\n}, {\n  separator: true\n}, {\n  name: 'Social Feed',\n  icon: 'k-i-user',\n  route: '/social-feed'\n}];\nclass DrawerRouterContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      expanded: false,\n      selectedId: items.findIndex(x => x.selected === true),\n      isSmallerScreen: window.innerWidth < 768\n    };\n    this.resizeWindow = () => {\n      this.setState({\n        isSmallerScreen: window.innerWidth < 768\n      });\n    };\n    // Handles a click on the drawer and set the drawer from open to close and vice versa\n    this.handleClick = () => {\n      this.setState(e => ({\n        expanded: !e.expanded\n      }));\n    };\n    // sets the selected item id, collapse the drawer and push the current route to the history\n    this.handleSelect = e => {\n      this.setState({\n        selectedId: e.itemIndex,\n        expanded: false\n      });\n      this.props.history.push(e.itemTarget.props.route);\n    };\n    // takes a pathname and returns a name which then sets into the Header\n    this.getSelectedItem = pathName => {\n      let currentPath = items.find(item => item.route === pathName);\n      if (currentPath.name) {\n        return currentPath.name;\n      }\n    };\n  }\n  // Why do we use this?\n  componentDidUpdate() {\n    try {\n      const parent = window.parent;\n      if (parent) {\n        parent.postMessage({\n          url: this.props.location.pathname,\n          demo: true\n        }, \"*\");\n      }\n    } catch (err) {\n      console.warn('Cannot access iframe');\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('resize', this.resizeWindow, false);\n    this.resizeWindow();\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeWindow);\n  }\n  render() {\n    let selected = this.getSelectedItem(this.props.location.pathname);\n    const localizationService = provideLocalizationService(this);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onButtonClick: this.handleClick // on button click will expand or collaplse the drawer\n        ,\n        page: localizationService.toLanguagesString(`custom.${selected}`) // selected the current language from the dropdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer // Creates a kendo drawer element \n      , {\n        expanded: this.state.expanded // takes the state of the current component and set it to the drawer\n        ,\n        animation: {\n          duration: 100\n        },\n        items: items.map(item => ({\n          // TODO: ask the support \n          ...item,\n          text: localizationService.toLanguageString(`custom.${item.name}`),\n          selected: item.name === selected\n        })),\n        position: \"start\" // states wether the drawer will be on the left or the right side\n        ,\n        mode: this.state.isSmallerScreen ? 'overlay' : 'push' // if the screen is small use overlay, otherwise push the content\n        ,\n        mini: this.state.isSmallerScreen ? false : true,\n        onOverlayClick: this.handleClick // sets the drawer from open to close and vice versa\n        ,\n        onSelect: this.handleSelect,\n        children: /*#__PURE__*/_jsxDEV(DrawerContent, {\n          style: {\n            height: 1066\n          },\n          children: [\" // Renders the content of the page\", this.props.children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}\n;\nregisterForLocalization(DrawerRouterContainer);\nexport default _c = withRouter(DrawerRouterContainer);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Drawer","DrawerContent","registerForLocalization","provideLocalizationService","Header","withRouter","jsxDEV","_jsxDEV","items","name","icon","selected","route","separator","DrawerRouterContainer","Component","constructor","arguments","state","expanded","selectedId","findIndex","x","isSmallerScreen","window","innerWidth","resizeWindow","setState","handleClick","e","handleSelect","itemIndex","props","history","push","itemTarget","getSelectedItem","pathName","currentPath","find","item","componentDidUpdate","parent","postMessage","url","location","pathname","demo","err","console","warn","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","localizationService","Fragment","children","onButtonClick","page","toLanguagesString","fileName","_jsxFileName","lineNumber","columnNumber","animation","duration","map","text","toLanguageString","position","mode","mini","onOverlayClick","onSelect","style","height","_c","$RefreshReg$"],"sources":["/Users/stanimiryakimov/Development/Kendo-Examples/LayoutSetup/src/DrawerRouterContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { Drawer, DrawerContent } from '@progress/kendo-react-layout';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport Header from './Header';\nimport { withRouter } from 'react-router-dom';\n\nconst items = [\n    { name: 'My Campaigns', icon: 'k-i-calendar', selected: true, route: '/' },\n    { name: 'Create Campaigns', icon: 'k-i-grid', route: '/create-campaign' },\n    { separator: true },\n    { name: 'Social Feed', icon: 'k-i-user', route: '/social-feed' },\n];\n\nclass DrawerRouterContainer extends React.Component {\n    state = {\n        expanded: false,\n        selectedId: items.findIndex(x => x.selected === true),\n        isSmallerScreen: window.innerWidth < 768\n    }\n\n    resizeWindow = () => {\n        this.setState({ isSmallerScreen: window.innerWidth < 768 })\n    }\n\n    // Handles a click on the drawer and set the drawer from open to close and vice versa\n    handleClick = () => {\n        this.setState((e) => ({ expanded: !e.expanded }));\n    }\n\n    // sets the selected item id, collapse the drawer and push the current route to the history\n    handleSelect = (e) => {\n        this.setState({ selectedId: e.itemIndex, expanded: false });\n        this.props.history.push(e.itemTarget.props.route);\n    }\n\n    // takes a pathname and returns a name which then sets into the Header\n    getSelectedItem = (pathName) => {\n        let currentPath = items.find(item => item.route === pathName);\n        if (currentPath.name) {\n            return currentPath.name;\n        }\n    }\n\n    // Why do we use this?\n    componentDidUpdate() {\n        try {\n            const parent = window.parent;\n            if (parent) {\n                parent.postMessage({ url: this.props.location.pathname, demo: true }, \"*\")\n            }\n        } catch (err) {\n            console.warn('Cannot access iframe')\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resizeWindow, false);\n        this.resizeWindow();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resizeWindow)\n    }\n\n    render() {\n        let selected = this.getSelectedItem(this.props.location.pathname);\n        const localizationService = provideLocalizationService(this);\n\n        return (\n            <React.Fragment>\n                <Header\n                    onButtonClick={this.handleClick} // on button click will expand or collaplse the drawer\n                    page={localizationService.toLanguagesString(`custom.${selected}`)} // selected the current language from the dropdown\n                />\n                <Drawer // Creates a kendo drawer element \n                    expanded={this.state.expanded} // takes the state of the current component and set it to the drawer\n                    animation={{ duration: 100 }}\n                    items={items.map((item) => ({ // TODO: ask the support \n                        ...item,\n                        text: localizationService.toLanguageString(`custom.${item.name}`),\n                        selected: item.name === selected\n                    }))\n                    }\n                    position='start' // states wether the drawer will be on the left or the right side\n                    mode={this.state.isSmallerScreen ? 'overlay' : 'push'} // if the screen is small use overlay, otherwise push the content\n                    mini={this.state.isSmallerScreen ? false : true}\n\n                    onOverlayClick={this.handleClick} // sets the drawer from open to close and vice versa\n                    onSelect={this.handleSelect}\n                >\n                    <DrawerContent style={{ height: 1066 }}> // Renders the content of the page\n                        {this.props.children} \n                    </DrawerContent>\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n};\n\nregisterForLocalization(DrawerRouterContainer);\n\nexport default withRouter(DrawerRouterContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}