{"ast":null,"code":"var PROPS_COUNT_LIMIT = 50000;\n/**\n * @hidden\n */\n// An alternative is to use array.sort() and\n// implement a binary search function.\nvar SortedPublicItemIds = /** @class */function () {\n  function SortedPublicItemIds() {\n    this.objects = [];\n  }\n  SortedPublicItemIds.prototype.init = function (publicItemIds) {\n    var currentObj;\n    for (var i = 0; i < publicItemIds.length; i++) {\n      if (i % PROPS_COUNT_LIMIT === 0) {\n        currentObj = {};\n        this.objects.push(currentObj);\n      }\n      currentObj[publicItemIds[i]] = true;\n    }\n  };\n  SortedPublicItemIds.prototype.hasId = function (publicItemId) {\n    return this.objects.some(function (obj) {\n      return obj[publicItemId];\n    });\n  };\n  return SortedPublicItemIds;\n}();\nexport default SortedPublicItemIds;","map":{"version":3,"names":["PROPS_COUNT_LIMIT","SortedPublicItemIds","objects","prototype","init","publicItemIds","currentObj","i","length","push","hasId","publicItemId","some","obj"],"sources":["/Users/stanimiryakimov/Development/Kendo-Examples/kendo-drawer/node_modules/@progress/kendo-react-treeview/dist/es/utils/SortedPublicItemIds.js"],"sourcesContent":["var PROPS_COUNT_LIMIT = 50000;\n/**\n * @hidden\n */\n// An alternative is to use array.sort() and\n// implement a binary search function.\nvar SortedPublicItemIds = /** @class */ (function () {\n    function SortedPublicItemIds() {\n        this.objects = [];\n    }\n    SortedPublicItemIds.prototype.init = function (publicItemIds) {\n        var currentObj;\n        for (var i = 0; i < publicItemIds.length; i++) {\n            if (i % PROPS_COUNT_LIMIT === 0) {\n                currentObj = {};\n                this.objects.push(currentObj);\n            }\n            currentObj[publicItemIds[i]] = true;\n        }\n    };\n    SortedPublicItemIds.prototype.hasId = function (publicItemId) {\n        return this.objects.some(function (obj) { return obj[publicItemId]; });\n    };\n    return SortedPublicItemIds;\n}());\nexport default SortedPublicItemIds;\n"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,KAAK;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,aAAe,YAAY;EACjD,SAASA,mBAAmBA,CAAA,EAAG;IAC3B,IAAI,CAACC,OAAO,GAAG,EAAE;EACrB;EACAD,mBAAmB,CAACE,SAAS,CAACC,IAAI,GAAG,UAAUC,aAAa,EAAE;IAC1D,IAAIC,UAAU;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAC3C,IAAIA,CAAC,GAAGP,iBAAiB,KAAK,CAAC,EAAE;QAC7BM,UAAU,GAAG,CAAC,CAAC;QACf,IAAI,CAACJ,OAAO,CAACO,IAAI,CAACH,UAAU,CAAC;MACjC;MACAA,UAAU,CAACD,aAAa,CAACE,CAAC,CAAC,CAAC,GAAG,IAAI;IACvC;EACJ,CAAC;EACDN,mBAAmB,CAACE,SAAS,CAACO,KAAK,GAAG,UAAUC,YAAY,EAAE;IAC1D,OAAO,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG,CAACF,YAAY,CAAC;IAAE,CAAC,CAAC;EAC1E,CAAC;EACD,OAAOV,mBAAmB;AAC9B,CAAC,EAAG;AACJ,eAAeA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}